module DicaLEDR (
    input clk,
    input start,                   // KEY[0] - define senha
    input enter,                   // KEY[3] - insere tentativa
    input [17:12] sw_senha,        // SW[17:12]
    input [5:0] sw_tentativa,      // SW[5:0]
    output reg [5:0] LEDR          // LEDR[5:0] mostram bits corretos
);

    reg [5:0] senha_reg = 6'b0;
    reg [5:0] tentativa_reg = 6'b0;

    // Grava a senha uma vez
    always @(posedge clk) begin
        if (start)
            senha_reg <= sw_senha;
    end

    // Ao pressionar ENTER, salva tentativa e calcula LEDR
    always @(posedge clk) begin
        if (enter) begin
            tentativa_reg <= sw_tentativa;
            LEDR <= (senha_reg ~^ sw_tentativa);  // comparador bit a bit (XNOR)
        end
    end

endmodule